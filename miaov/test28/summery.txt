三个小练习： 
1.鼠标绘制方块:
	在一个方块内通过鼠标点击及移动自定义绘制一个四边形。
	先通过onmousedown创建一个div元素并初始化：添加className，将当前鼠标的坐标赋值作为元素top  left位置
	通过onmousemove将鼠标移动的当前坐标减去最开始点击时的坐标作为元素的width height
	两个问题：
	a.边界的限定：用九宫格判断法控制绘制的四边形只能在div以内
	b.若鼠标从初始坐标往左/上移动时，此时初始点不再是元素top/left位置坐标点，
	  而是将鼠标移动后的坐标点作为元素位置设置，而将此坐标减去初始坐标作为width height边界

2.移动回放：
	用鼠标移动一个元素移动，点击"回放"按钮可以让元素按原移动路线回到初始位置。
	开始看到这个题目还比较担心做不出来，后来思考后其实就是讲元素每次移动的位置存放如一个数组
	点击按钮后将数组的值按“先进后出”的原则将值作为元素的坐标，开一个定时器反复执行直到数组内
	坐标全部执行完即可。（若按“先进先出”原则即可实现将路线图重新模拟返回一遍）

3.滚动条效果：
	用自制的DIV元素模拟滚动条效果，在原有要求基础上增加了鼠标滚动的效果。
	先按比例计算出滚动条大小：滚动条height/滚动框height = 内容区clientHeight/实际内容区scrollHeight
	滚动时候内容区移动效果： 滚动条滚动的距离/滚动框height = 内容区scrollTop/实际内容区scrollHeight
	以及注意滚动条移动的边界判断
	具体方法在代码内备注的很详细了

4.一个注意事项：
	js中top是window下的一个对象属性。返回对载入浏览器最顶层window对象的引用，如果window对象是常规HTML
	页面，则window指向self。
	在练习当中有一次想将top设为全局变量没有用var声明，然而程序效果无法实现，调试时才发现top为一个window对象，
	故而发现此问题。

